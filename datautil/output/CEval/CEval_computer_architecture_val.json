{
    "basic_information": {
        "name": "ceval_computer_architecture_val",
        "creator": "ceval",
        "date": "2023/05",
        "info": "ceval, computer_architecture, validation set"
    },
    "cases": [
        {
            "input": "指令中地址码的长度不仅与主存容量有关，而且还与____有关。\nA: 主存字长\nB: 最小寻址单位\nC: 指令格式\nD: 地址码格式",
            "expected_answer": "B",
            "info": "case 0"
        },
        {
            "input": "开中断和关中断两种操作都用于对____进行设置。\nA: 中断允许触发器\nB: 中断屏蔽寄存器\nC: 中断请求寄存器\nD: 中断向量寄存器",
            "expected_answer": "A",
            "info": "case 1"
        },
        {
            "input": "计算机系统的层次结构可以分为6层，其层次之间的依存关系是____。\nA: 上下层之间相互无关\nB: 上层实现对下层的功能扩展，而下层是实现上层的基础\nC: 上层实现对下层的扩展作用，而下层对上层有限制作用\nD: 上层和下层的关系是相互依存、不可分割的",
            "expected_answer": "B",
            "info": "case 2"
        },
        {
            "input": "在主机与外设的信息传送中，____不是一种程序控制方式。\nA: 直接程序控制\nB: 程序中断\nC: 直接存储器存储(DMA)\nD: 通道控制",
            "expected_answer": "C",
            "info": "case 3"
        },
        {
            "input": "关于LRU算法，以下论述正确的是____。\nA: LRU算法替换掉那些在Cache中驻留时间最长且未被引用的块\nB: LRU算法替换掉那些在Cache中驻留时间最短且未被引用的块\nC: LRU算法替换掉那些在Cache中驻留时间最长且仍在引用的块\nD: LRU算法替换掉那些在Cache中驻留时间最短且仍在引用的块",
            "expected_answer": "A",
            "info": "case 4"
        },
        {
            "input": "已知一台时钟频率为2GHz的计算机的CPI为1.2。某程序P在该计算机上的指令条数为$4×10^9$。若在该计算机上，程序P从开始启动到执行结束所经历的时间是4s，则运行P所用CPU时间占整个CPU时间的百分比大约是____。\nA: 40%\nB: 60%\nC: 80%\nD: 100%",
            "expected_answer": "B",
            "info": "case 5"
        },
        {
            "input": "总线宽度与下列____有关。\nA: 控制线根数\nB: 数据线根数\nC: 地址线根数\nD: 以上都不对",
            "expected_answer": "B",
            "info": "case 6"
        },
        {
            "input": "计算机的指令系统是计算机____的接口。\nA: 数据和指令\nB: 命令和显示\nC: 输入系统和输出系统\nD: 软件和硬件",
            "expected_answer": "D",
            "info": "case 7"
        },
        {
            "input": "按通道的工作方式分，通道有____。\nA: 选择通道\nB: 字节多路通道\nC: 数组多路通道\nD: 以上答案均正确",
            "expected_answer": "D",
            "info": "case 8"
        },
        {
            "input": "用海明码对长度为8位的数据进行检/纠错时，若能纠正一位错，则校验位数至少为____。\nA: 2\nB: 3\nC: 4\nD: 5",
            "expected_answer": "C",
            "info": "case 9"
        },
        {
            "input": "微型计算机的发展以____技术为标志。\nA: 操作系统\nB: 微处理器\nC: 磁盘\nD: 软件",
            "expected_answer": "B",
            "info": "case 10"
        },
        {
            "input": "一个16位无符号二进制数的表示范围是____。\nA: 0～65536\nB: 0～65535\nC: -32768～32767\nD: -32768～32768",
            "expected_answer": "B",
            "info": "case 11"
        },
        {
            "input": "子程序调用指令执行时，要把当前程序计数器(PC)的内容存到____。\nA: 通用寄存器\nB: 堆栈\nC: 指令寄存器\nD: 数据缓冲器",
            "expected_answer": "B",
            "info": "case 12"
        },
        {
            "input": "某计算机字长32位，其存储容量是1MB。若按字编址，它的寻址范围是____。\nA: 0～1M\nB: 0～512K\nC: 0～256K\nD: 0～256KB",
            "expected_answer": "C",
            "info": "case 13"
        },
        {
            "input": "单地址双目运算类指令中，除地址码指明的一个操作数以外，另一个操作数通常采用____。\nA: 堆栈寻址方式\nB: 立即寻址方式\nC: 间接寻址方式\nD: 隐含指定方式",
            "expected_answer": "D",
            "info": "case 14"
        },
        {
            "input": "中断发生时，程序计数器内容的保护和更新是由____完成的。\nA: 硬件自动\nB: 进栈指令和转移指令\nC: 访存指令\nD: 中断服务程序",
            "expected_answer": "A",
            "info": "case 15"
        },
        {
            "input": "执行for循环时，需要传送循环次数值给某专用寄存器，一般使用的寻址方式是____。\nA: 立即寻址\nB: 直接寻址\nC: 基址寻址\nD: 相对寻址",
            "expected_answer": "A",
            "info": "case 16"
        },
        {
            "input": "对真值0表示形式唯一的机器数是____。\nA: 原码\nB: 补码和移码\nC: 反码\nD: 以上都不对",
            "expected_answer": "B",
            "info": "case 17"
        },
        {
            "input": "下列关于Cache的说法中，正确的是____。\nA: 采用直接映像时，Cache无需考虑替换问题\nB: 如果选用最优替换算法，则Cache的命中率可以达到100%\nC: Cache本身的速度越快，则Cache存储器的等效访问速度就越快\nD: Cache的容量与主存的容量差别越大越好",
            "expected_answer": "A",
            "info": "case 18"
        },
        {
            "input": "关于通用寄存器，下列说法正确的是____。\nA: 可存放指令的寄存器\nB: 可存放程序状态字的寄存器\nC: 本身具有计数逻辑与移位逻辑的寄存器\nD: 可存放运算结果的寄存器",
            "expected_answer": "D",
            "info": "case 19"
        },
        {
            "input": "微程序存放的位置是____。\nA: CPU\nB: 高速缓冲存储器\nC: 主存储器\nD: 磁盘存储器",
            "expected_answer": "A",
            "info": "case 20"
        }
    ],
    "formatters": [
        {
            "name": "default_format",
            "definition": "function formatter(llm_response){return llm_response}",
            "info": "do nothing"
        },
        {
            "name": "extract_ABCD",
            "definition": [
                "function formatter(llm_response) {",
                "    let pred = -1;",
                "    if (!llm_response) {",
                "        return pred;",
                "    }",
                "   const regex = /[A-D]\\./;",
                "   const match = llm_response.match(regex);  ",
                "   if (match) {  ",
                "       pred = match[0][0];  ",
                "       return pred;",
                "   }",
                "    for (let k = 0; k < 4; k++) {",
                "        const x = String.fromCharCode(65 + k); // ASCII code for 'A' + k  ",
                "        if (",
                "            llm_response.includes(x + ')') ||",
                "            llm_response.includes(x + '：') ||",
                "            llm_response[llm_response.length - 1] === x ||",
                "            (llm_response.length > 1 && llm_response[llm_response.length - 2] === x) ||  ",
                "            llm_response.includes(x + '。')  ",
                "        ) {  ",
                "            pred = x;",
                "            return pred;",
                "        }  ",
                "        if ( ",
                "            llm_response.startsWith(x + ' ') || ",
                "            llm_response.startsWith(x + '.') || ",
                "            llm_response.startsWith(x + '(')  ",
                "        ) {  ",
                "            pred = x;  ",
                "            return pred;  ",
                "        }  ",
                "    }  ",
                "    return pred;  ",
                "}"
            ],
            "info": "extract A/B/C/D if possible, else return -1"
        }
    ],
    "evaluators": [
        {
            "name": "accuracy",
            "definition": "function evaluator(formatted_response, expected_answer, args){if (formatted_response == expected_answer) return 1; else return 0;}",
            "info": "exact string match"
        },
        {
            "name": "likert_scale",
            "definition": "async function evaluator(formatted_response, expected_answer, args){return await user_input(formatted_response, expected_answer, args)}",
            "info": "human evaluation, rating from 1 to 5"
        }
    ],
    "evaluation": {
        "target_LLM": "GPT-3.5",
        "target_formatter": "extract_ABCD",
        "reference_type": "Given",
        "reference_LLM": "None",
        "reference_formatter": "extract_ABCD",
        "evaluator": "accuracy",
        "summary": "None"
    }
}